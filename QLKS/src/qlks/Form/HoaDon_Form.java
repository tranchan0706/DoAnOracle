/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlks.Form;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import qlks.CThoadon;
import qlks.DichVu;
import qlks.HoaDon;
import qlks.KhachHang;
import qlks.MyConnection;
import static qlks.MyConnection.getConnection;
import qlks.NhanVien;
import qlks.Phong;
import static qlks.Form.DangNhap_Form.Hostname;
import static qlks.Form.DangNhap_Form.Password;
import static qlks.Form.DangNhap_Form.Port;
import static qlks.Form.DangNhap_Form.SID;
import static qlks.Form.DangNhap_Form.Username;
import qlks.thuephong;

public class HoaDon_Form extends javax.swing.JFrame {

    /**
     * Creates new form hoadonform
     */
    public HoaDon_Form() {
        initComponents();
        getConnection(Hostname, Port, SID, Username, Password);
        hienThiDanhSachHoaDon();
        LoadMADK();
        setLocationRelativeTo(null);
    }

    Connection con = null;
    Statement st = null;

    public ArrayList<thuephong> layDanhSachthuephong() {
        ArrayList<thuephong> dsp = new ArrayList<thuephong>();
        String sql = "SELECT * FROM hr.THUEPHONG";
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            thuephong p;
            while (rs.next()) {
                p = new thuephong(rs.getString("MADK"), rs.getString("MAKH"), rs.getString("SOPHONG"), 
                        rs.getDate("NGAYDK"), rs.getDate("NGAYDI"), rs.getInt("SONGAY"));

                //Thêm vào danh sách
                dsp.add(p);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dsp;
    }

    public void LoadMADK() {
        cb_madk.removeAllItems();

        ArrayList<thuephong> ds;
        ds = layDanhSachthuephong();
        for (thuephong a : ds) {
            Vector v = new Vector();
            v.add(a.getMADK());
            //add cb
            cb_madk.addItem(a.getMADK());

        }

    }

    public ArrayList<HoaDon> layDanhSachHoaDon(String sql) {
        ArrayList<HoaDon> dshd = new ArrayList<HoaDon>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            HoaDon hd;
            while (rs.next()) {
                hd = new HoaDon(rs.getString("MAHD"), rs.getString("TENHD"), rs.getString("MADV"), 
                        rs.getString("MAKH"), rs.getDate("NGAYLAP"), rs.getString("MANV"), rs.getString("SOPHONG"));

                //Thêm vào danh sách
                dshd.add(hd);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dshd;
    }

    public void hienThiDanhSachHoaDon() {
        String sql = "SELECT * FROM hr.hoadon";
        String colTieuDe1[] = new String[]{"Mã Hóa Đơn", "Tên Hóa Đơn", "Mã Khách Hàng", "Ngày Lập", "Mã NV", "Số Phòng"};
        ArrayList<HoaDon> dshd = layDanhSachHoaDon(sql);

        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);

        Object[] row;

        for (int i = 0; i < dshd.size(); i++) {

            row = new Object[6];

            // GÁN GIÁ TRỊ
            row[0] = dshd.get(i).getMAHD();
            row[1] = dshd.get(i).getTENHD();
            //row[2] = dshd.get(i).getMADV();
            row[2] = dshd.get(i).getMAKH();
            row[3] = dshd.get(i).getNGAYLAP();
            row[4] = dshd.get(i).getMANV();
            row[5] = dshd.get(i).getSOPHONG();
            model.addRow(row);
        }

        //    }catch(ArrayIndexOutOfBoundsException ex){
        jTableHOADON.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jTextFieldMAHD = new javax.swing.JTextField();
        jTextFieldTENHD = new javax.swing.JTextField();
        jTextFieldMAKH = new javax.swing.JTextField();
        them4 = new javax.swing.JButton();
        sua4 = new javax.swing.JButton();
        xoa4 = new javax.swing.JButton();
        thoat4 = new javax.swing.JButton();
        jButtonclear4 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jTextFieldNGAYLAP = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldMANV = new javax.swing.JTextField();
        jTextFieldSOPHONG = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_ngaynhap = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableHOADON = new javax.swing.JTable();
        btn_sapxep = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        cb_madk = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 255));

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/nextthanhtoan.png"))); // NOI18N
        jButton3.setText("THANH TOÁN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/hoadon.png"))); // NOI18N
        jLabel31.setText("HÓA ĐƠN");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel31)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addContainerGap())
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tn Hóa Đơn"));

        jLabel32.setText("Mã Hóa Đơn");

        jLabel33.setText("Tên Hóa Đơn");

        jLabel35.setText("Ngày Lập");

        jTextFieldMAHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMAHDActionPerformed(evt);
            }
        });
        jTextFieldMAHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMAHDKeyPressed(evt);
            }
        });

        jTextFieldMAKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMAKHActionPerformed(evt);
            }
        });
        jTextFieldMAKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMAKHKeyPressed(evt);
            }
        });

        them4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/THEM.png"))); // NOI18N
        them4.setText("Thêm");
        them4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them4ActionPerformed(evt);
            }
        });

        sua4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/SUA.png"))); // NOI18N
        sua4.setText("Sửa");
        sua4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sua4ActionPerformed(evt);
            }
        });

        xoa4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/XOA.png"))); // NOI18N
        xoa4.setText("Xóa");
        xoa4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoa4ActionPerformed(evt);
            }
        });

        thoat4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/THOAT.png"))); // NOI18N
        thoat4.setText("Thoát");
        thoat4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoat4ActionPerformed(evt);
            }
        });

        jButtonclear4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/CLEAR.png"))); // NOI18N
        jButtonclear4.setText("Clear");
        jButtonclear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclear4ActionPerformed(evt);
            }
        });

        jLabel37.setText("Mã Khách Hàng");

        jTextFieldNGAYLAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNGAYLAPActionPerformed(evt);
            }
        });
        jTextFieldNGAYLAP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNGAYLAPKeyTyped(evt);
            }
        });

        jLabel36.setText("Mã NV");

        jTextFieldMANV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMANVActionPerformed(evt);
            }
        });
        jTextFieldMANV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMANVKeyPressed(evt);
            }
        });

        jTextFieldSOPHONG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSOPHONGActionPerformed(evt);
            }
        });
        jTextFieldSOPHONG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSOPHONGKeyPressed(evt);
            }
        });

        jLabel38.setText("Số Phòng");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), " Hóa đơn lập sau"));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/timkiem.png"))); // NOI18N
        jButton1.setText("Tìm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ngày:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txt_ngaynhap, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)
                .addComponent(txt_ngaynhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel33))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32)))
                .addGap(43, 43, 43)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMAHD, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldTENHD))
                .addGap(12, 12, 12))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel37)
                            .addComponent(jLabel36)
                            .addComponent(jLabel38))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNGAYLAP)
                            .addComponent(jTextFieldMANV)
                            .addComponent(jTextFieldSOPHONG, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldMAKH, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(xoa4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(them4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(sua4)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonclear4))
                            .addComponent(thoat4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMAHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextFieldTENHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextFieldNGAYLAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMANV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSOPHONG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sua4)
                    .addComponent(them4)
                    .addComponent(jButtonclear4))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xoa4)
                    .addComponent(thoat4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTableHOADON.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableHOADON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHOADONMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableHOADON);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_sapxep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/sapxep.png"))); // NOI18N
        btn_sapxep.setText("Sắp Xếp");
        btn_sapxep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sapxepActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thêm Hóa Đơn vào Thanh Toán"));

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlks/Form/hinh/Knob-Add-icon.png"))); // NOI18N
        jButton4.setText("Thêm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        cb_madk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Chọn Mã Đăng Ký  Phòng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(141, 141, 141))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cb_madk, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_madk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293)
                        .addComponent(btn_sapxep))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)))))
                .addGap(0, 39, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sapxep))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMAHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMAHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMAHDActionPerformed
    public Boolean kiemtratxt() {
        if (jTextFieldMAKH.getText().equals("") || jTextFieldMAHD.getText().equals("") || jTextFieldTENHD.getText().equals("") 
                || jTextFieldMANV.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Thong bao", 2);
            return false;
        }
        return true;
    }
    ArrayList<HoaDon> dshd = layDanhSachHoaDon("select * from hr.hoadon");

    public static Boolean kiemtramahd(ArrayList<HoaDon> dshd, String mahd) {
        for (HoaDon t : dshd) {
            if (t.getMAHD().equals(mahd)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtramahoadon() {
        if (kiemtramahd(dshd, jTextFieldMAHD.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Mã Hóa Đơn Khác!!", "Thong bao", 2);
            return false;
        }
        return true;
    }

    public ArrayList<KhachHang> layDanhSachKhachHang(String sql) {
        ArrayList<KhachHang> dskh = new ArrayList<KhachHang>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            KhachHang kh;
            while (rs.next()) {
                kh = new KhachHang(rs.getString("MAKH"), rs.getString("TENKH"), rs.getDate("NGAYSINH"), rs.getString("GIOITINH"), rs.getString("CMND"), rs.getString("QUOCTICH"), rs.getString("SDT"), rs.getString("LOAIKH"));

                //Thêm vào danh sách
                dskh.add(kh);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dskh;
    }
    ArrayList<KhachHang> dskh = layDanhSachKhachHang("select * from hr.khachhang");

    public static Boolean kiemtrakh(ArrayList<KhachHang> dskh, String makh) {
        for (KhachHang t : dskh) {
            if (t.getMAKH().equals(makh)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtrakhachhang() {
        if (kiemtrakh(dskh, jTextFieldMAKH.getText().trim())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Mã Khách không tồn tại!!", "Thong bao", 2);
            return false;
        }
    }
    private void them4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them4ActionPerformed
        // TODO add your handling code here:
        if (kiemtrangaysinh() && kiemtratxt() && kiemtramahoadon() && kiemtrakhachhang() && kiemtranhanvien()  && kiemtrasophong()) {//&& kiemtradichvu()
            Connection con = getConnection(Hostname, Port, SID, Username, Password);
            try {
                // Tạo một đối tượng để thực hiện công việc
                st = (Statement) con.createStatement();
                String query = "INSERT INTO HR.hoadon VALUES('" + jTextFieldMAHD.getText() + "',"
                        + "'" + jTextFieldTENHD.getText() + "','', '" + jTextFieldMAKH.getText()
                        + "',TO_DATE('" + jTextFieldNGAYLAP.getText() + "','DD/MM/YYYY'),'" 
                        + jTextFieldMANV.getText() + "','" + jTextFieldSOPHONG.getText() + "')";

                st.execute(query);
                hienThiDanhSachHoaDon();

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_them4ActionPerformed
    public Boolean kiemtrangaysinh() {
        try {
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Date date = df.parse(jTextFieldNGAYLAP.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập kiểu dữ liệu ngày sinh là dd/mm/yyyy", "Thong bao", 2);
            return false;
        }
        return true;
    }

    public ArrayList<NhanVien> layDanhSachNhanVien(String sql) {
        ArrayList<NhanVien> dsnv = new ArrayList<NhanVien>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();
            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            NhanVien nv;
            while (rs.next()) {
                nv = new NhanVien(rs.getString("MANV"), rs.getString("TENNV"), rs.getString("CHUCVU"), rs.getInt("LUONGNV"), rs.getDate("NGAYSINH"), rs.getString("GIOITINH"), rs.getString("MANQL"), rs.getString("ANHNV"));

                //Thêm vào danh sách
                dsnv.add(nv);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dsnv;
    }
    ArrayList<NhanVien> dsnv = layDanhSachNhanVien("select * from hr.nhanvien");

    public static Boolean kiemtranv(ArrayList<NhanVien> dsnv, String manv) {
        for (NhanVien t : dsnv) {
            if (t.getMANV().equals(manv)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtranhanvien() {
        if (kiemtranv(dsnv, jTextFieldMANV.getText().trim())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Mã Nhân Viên không tồn tại!!", "Thong bao", 2);
            return false;
        }
    }

//    public ArrayList<DichVu> layDanhSachDichVu(String sql) {
//        ArrayList<DichVu> dsdv = new ArrayList<DichVu>();
//        Connection con = getConnection(Hostname, Port, SID, Username, Password);
//        try {
//            st = (Statement) con.createStatement();
//
//            // Thưc thi câu lệnh truy vấn
//            ResultSet rs = st.executeQuery(sql);
//
//            DichVu dv;
//            while (rs.next()) {
//                dv = new DichVu(rs.getString("MADV"), rs.getString("TENDV"), rs.getInt("GIADV"), rs.getString("NGUOIQL"));
//
//                //Thêm vào danh sách
//                dsdv.add(dv);
//            }
//        } catch (Exception ex) {
//            ex.printStackTrace();
//
//        }
//        return dsdv;
//    }
//    ArrayList<DichVu> dsdv = layDanhSachDichVu("select * from dichvu");
//
//    public static Boolean kiemtradv(ArrayList<DichVu> dsdv, String madv) {
//        for (DichVu t : dsdv) {
//            if (t.getMADV().equals(madv)) {
//                return true;
//            }
//        }
//        return false;
//    }
//
//    public Boolean kiemtradichvu() {
//        if (kiemtradv(dsdv, jTextFieldMADV.getText().trim())) {
//            return true;
//        } else {
//            JOptionPane.showMessageDialog(this, "Mã Dịch Vụ không tồn tại!!", "Thong bao", 2);
//            return false;
//        }
//    }

    public ArrayList<Phong> layDanhSachPhong(String sql) {
        ArrayList<Phong> dsp = new ArrayList<Phong>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            Phong p;
            while (rs.next()) {
                p = new Phong(rs.getString("SOPHONG"), rs.getString("LOAIPHONG"), rs.getInt("GIAPHONG"), rs.getString("TINHTRANG"));

                //Thêm vào danh sách
                dsp.add(p);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dsp;
    }
    ArrayList<Phong> dsp = layDanhSachPhong("select * from hr.phong");

    public static Boolean kiemtrasp(ArrayList<Phong> dsp, String sp) {
        for (Phong t : dsp) {
            if (t.getSOPHONG().equals(sp)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtrasophong() {
        if (kiemtrasp(dsp, jTextFieldSOPHONG.getText().trim())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Số Phòng không tồn tại!!", "Thong bao", 2);
            return false;
        }
    }
    private void sua4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sua4ActionPerformed
        // TODO add your handling code here:
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        int pos = jTableHOADON.getSelectedRow();
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn Hãy Chọn 1 dòng");
        } else {
            try {
                if (kiemtratxt() && kiemtrakhachhang() && kiemtranhanvien()  && kiemtrasophong()) {//&& kiemtradichvu()
                    // Tạo một đối tượng để thực hiện công việc
                    int i = -1;
                    st = (Statement) con.createStatement();
                    String query = "update hr.hoadon set TenHD='" + jTextFieldTENHD.getText() + "', madv='', makh='"//"
                            + jTextFieldMAKH.getText() + "', ngaylap=TO_DATE('" + jTextFieldNGAYLAP.getText() 
                            + "','YYYY/MM/DD'), manv='" + jTextFieldMANV.getText() + "',sophong='" + jTextFieldSOPHONG.getText()
                            + "' where mahd ='" + jTextFieldMAHD.getText() + "'";
                    System.out.print(query);
                    i = st.executeUpdate(query);
                    if (i != -1) {
                        hienThiDanhSachHoaDon();
                    }
                }
            } catch (Exception ex) {

                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_sua4ActionPerformed

    public static Boolean kiemtrax(ArrayList<CThoadon> dsct, String mahd) {
        for (CThoadon c : dsct) {
            if (c.getMAHD().equals(mahd)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtraxoa() {
        if (kiemtrax(dsct, jTextFieldMAHD.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Vui lòng Thanh Toán rỗi hãy Xóa!!", "Thong bao", 2);
            return true;
        }
        return false;
    }
    private void xoa4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoa4ActionPerformed
        // TODO add your handling code here:
        int pos = jTableHOADON.getSelectedRow();
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn Hãy Chọn 1 dòng");
        } else {
            Connection con = getConnection(Hostname, Port, SID, Username, Password);
            if (kiemtraxoa() == false) {
                try {
                    // Tạo một đối tượng để thực hiện công việc
                    st = (Statement) con.createStatement();
                    String query = "DELETE FROM hr.hoadon WHERE MAHD = '" + jTextFieldMAHD.getText() + "'";
                    st.executeUpdate(query);
                    hienThiDanhSachHoaDon();

                } catch (Exception ex) {

                    //ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_xoa4ActionPerformed

    private void thoat4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoat4ActionPerformed
        // TODO add your handling code here:
        thoat4.setToolTipText("Click để thoát chương trình ");
        int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát chương"
                + " trình không", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (selected == JOptionPane.YES_OPTION) {
            this.dispose();

        }
    }//GEN-LAST:event_thoat4ActionPerformed

    private void jButtonclear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclear4ActionPerformed
        // TODO add your handling code here:
        jTextFieldMAHD.setText("");
        jTextFieldTENHD.setText("");
        //jTextFieldMADV.setText("");
        jTextFieldMAKH.setText("");
        jTextFieldNGAYLAP.setText("");
        jTextFieldMANV.setText("");
        jTextFieldSOPHONG.setText("");
        jTextFieldMAHD.requestFocus();
        hienThiDanhSachHoaDon();

    }//GEN-LAST:event_jButtonclear4ActionPerformed

    private void jTableHOADONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHOADONMouseClicked
        // TODO add your handling code here:
        int i = jTableHOADON.getSelectedRow();
        TableModel model = jTableHOADON.getModel();
        jTextFieldMAHD.setText(model.getValueAt(i, 0).toString());
        jTextFieldTENHD.setText(model.getValueAt(i, 1).toString());
        //jTextFieldMADV.setText(model.getValueAt(i, 2).toString());
        jTextFieldMAKH.setText(model.getValueAt(i, 2).toString());
        jTextFieldNGAYLAP.setText(model.getValueAt(i, 3).toString());
        jTextFieldMANV.setText(model.getValueAt(i, 4).toString());
        jTextFieldSOPHONG.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_jTableHOADONMouseClicked

    private void jTextFieldMAKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMAKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMAKHActionPerformed

    private void jTextFieldNGAYLAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNGAYLAPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNGAYLAPActionPerformed

    private void btn_sapxepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sapxepActionPerformed
        // TODO add your handling code here:
        String sql = "select * from hr.hoadon order by 7";
        String colTieuDe1[] = new String[]{"Mã Hóa Đơn", "Tên Hóa Đơn", "Mã Dịch Vụ", "Mã Khách Hàng", "Ngày Lập", "Mã Nhân Viên", "Số Phòng"};
        ArrayList<HoaDon> dshd = layDanhSachHoaDon(sql);

        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);

        Object[] row;

        for (int i = 0; i < dshd.size(); i++) {

            row = new Object[7];

            // GÁN GIÁ TRỊ
            row[0] = dshd.get(i).getMAHD();
            row[1] = dshd.get(i).getTENHD();
            row[2] = dshd.get(i).getMADV();
            row[3] = dshd.get(i).getMAKH();
            row[4] = dshd.get(i).getNGAYLAP();
            row[5] = dshd.get(i).getMANV();
            row[6] = dshd.get(i).getSOPHONG();
            model.addRow(row);
        }

        //    }catch(ArrayIndexOutOfBoundsException ex){
        jTableHOADON.setModel(model);
    }//GEN-LAST:event_btn_sapxepActionPerformed

    public Boolean kiemtratk() {
        if (txt_ngaynhap.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui long nhap day du thong tin tim kiem", "Thong bao", 2);
            return false;
        }
        return true;
    }

    public Boolean kiemtrangaytk() {
        try {
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Date date = df.parse(txt_ngaynhap.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập kiểu dữ liệu ngày sinh là dd/mm/yyyy", "Thong bao", 2);
            return false;
        }
        return true;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (kiemtratk() && kiemtrangaytk()) {
            String sql = "select * from hr.hoadon where ngaylap > TO_date('" + txt_ngaynhap.getText() + "','dd/mm/yyyy')";
            String colTieuDe1[] = new String[]{"Mã Hóa Đơn", "Tên Hóa Đơn", "Mã Dịch Vụ", "Mã Khách Hàng", "Ngày Lập", "Mã NV"};
            ArrayList<HoaDon> dshd = layDanhSachHoaDon(sql);

            DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);

            Object[] row;

            for (int i = 0; i < dshd.size(); i++) {

                row = new Object[6];

                // GÁN GIÁ TRỊ
                row[0] = dshd.get(i).getMAHD();
                row[1] = dshd.get(i).getTENHD();
                row[2] = dshd.get(i).getMADV();
                row[3] = dshd.get(i).getMAKH();
                row[4] = dshd.get(i).getNGAYLAP();
                row[5] = dshd.get(i).getMANV();
                model.addRow(row);
            }

            //    }catch(ArrayIndexOutOfBoundsException ex){
            jTableHOADON.setModel(model);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldMANVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMANVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMANVActionPerformed

    private void jTextFieldNGAYLAPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNGAYLAPKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNGAYLAPKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ThanhToan_Form nvf = new ThanhToan_Form();
        nvf.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed
    public ArrayList<CThoadon> layDanhSachCTHD(String sql) {
        ArrayList<CThoadon> dsct = new ArrayList<CThoadon>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);

            CThoadon ct;
            while (rs.next()) {
                ct = new CThoadon(rs.getString("MAHD"), rs.getString("MADK"), rs.getInt("TONGTIEN"), rs.getString("GHICHU"));

                //Thêm vào danh sách
                dsct.add(ct);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return dsct;
    }
    ArrayList<CThoadon> dsct = layDanhSachCTHD("select * from hr.cthoadon");

    public static Boolean kiemtratt(ArrayList<CThoadon> dsct, String mahd, String madk) {
        for (CThoadon c : dsct) {
            if (c.getMAHD().equals(mahd) && c.getMADK().equals(madk)) {
                return true;
            }
        }
        return false;
    }

    public Boolean kiemtrathanhtoan() {
        if (kiemtratt(dsct, jTextFieldMAHD.getText().trim(), cb_madk.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Đã tồn tại trong Thanh Toán!!", "Thong bao", 2);
            return true;
        }
        return false;
    }

    public void ThemHDThanhToan() {
        int pos = jTableHOADON.getSelectedRow();
        String mahd = jTableHOADON.getValueAt(pos, 0).toString();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();
            String sql = "insert into hr.cthoadon values"
                    + "('" + mahd + "','" + cb_madk.getSelectedItem().toString() + "','','CHUA THANH TOAN')";
            System.out.print(sql);

            // Thưc thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);
            if (rs != null) {
                System.out.println();
                System.out.println("=> thành công");
                JOptionPane.showMessageDialog(rootPane, "Thêm Thành Công =))");
            }

        } catch (Exception ex) {
            System.out.println("=> Thêm Thất Bại =((");
            ex.printStackTrace();

        }
    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int pos = jTableHOADON.getSelectedRow();
        if (pos < 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn Hãy Chọn 1 Hóa Đơn của Khách Hàng có Mã Đăng Ký là " + cb_madk.getSelectedItem().toString());
        } else {
            if (kiemtramadangky() && kiemtrathanhtoan() == false) {
                ThemHDThanhToan();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextFieldSOPHONGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSOPHONGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSOPHONGActionPerformed

    private void jTextFieldMAHDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMAHDKeyPressed
        // TODO add your handling code here:
        if(jTextFieldMAHD.getText().length()>=10)
        {
            jTextFieldMAHD.setText((jTextFieldMAHD.getText().substring(0,9)));
        }
    }//GEN-LAST:event_jTextFieldMAHDKeyPressed

    private void jTextFieldMAKHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMAKHKeyPressed
        // TODO add your handling code here:
        if(jTextFieldMAKH.getText().length()>=10)
        {
            jTextFieldMAKH.setText((jTextFieldMAKH.getText().substring(0,9)));
        }
    }//GEN-LAST:event_jTextFieldMAKHKeyPressed

    private void jTextFieldMANVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMANVKeyPressed
        // TODO add your handling code here:
        if(jTextFieldMANV.getText().length()>=10)
        {
            jTextFieldMANV.setText((jTextFieldMANV.getText().substring(0,9)));
        }
    }//GEN-LAST:event_jTextFieldMANVKeyPressed

    private void jTextFieldSOPHONGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSOPHONGKeyPressed
        // TODO add your handling code here:
        if(jTextFieldSOPHONG.getText().length()>=10)
        {
            jTextFieldSOPHONG.setText((jTextFieldSOPHONG.getText().substring(0,9)));
        }
    }//GEN-LAST:event_jTextFieldSOPHONGKeyPressed

    public ArrayList<thuephong> layDanhSachTP(String sql) {
        ArrayList<thuephong> d = new ArrayList<thuephong>();
        Connection con = getConnection(Hostname, Port, SID, Username, Password);
        try {
            st = (Statement) con.createStatement();

            // Thưcj thi câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);
            thuephong w;
            while (rs.next()) {
                w = new thuephong(rs.getString("MADK"), rs.getString("MAKH"), rs.getString("SOPHONG"), rs.getDate("NGAYDK"), rs.getDate("NGAYDI"), rs.getInt("SONGAY"));

                //Thêm vào danh sách
                d.add(w);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
        return d;
    }
    ArrayList<thuephong> dst = layDanhSachTP("select * from hr.thuephong");

    public static Boolean kiemtramadk(ArrayList<thuephong> dst, String makh, String sp, String madk) {
        for (thuephong t : dst) {
            if (t.getMAKH().equals(makh) && t.getSOPHONG().equals(sp) && t.getMADK().equals(madk)) {
                return true;
            }
        }

        return false;
    }

    public Boolean kiemtramadangky() {
        if (kiemtramadk(dst, jTextFieldMAKH.getText().trim(), jTextFieldSOPHONG.getText().trim(), cb_madk.getSelectedItem().toString())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Mã Khách Hàng và Số Phòng không trùng khớp với Mã Đăng Ký Thuê phòng!!", "Thong bao", 2);
            return false;
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sapxep;
    private javax.swing.JComboBox<String> cb_madk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonclear4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTableHOADON;
    private javax.swing.JTextField jTextFieldMAHD;
    private javax.swing.JTextField jTextFieldMAKH;
    private javax.swing.JTextField jTextFieldMANV;
    private javax.swing.JTextField jTextFieldNGAYLAP;
    private javax.swing.JTextField jTextFieldSOPHONG;
    private javax.swing.JTextField jTextFieldTENHD;
    private javax.swing.JButton sua4;
    private javax.swing.JButton them4;
    private javax.swing.JButton thoat4;
    private javax.swing.JTextField txt_ngaynhap;
    private javax.swing.JButton xoa4;
    // End of variables declaration//GEN-END:variables
}
